<section class="overview">
  <h1>Getting Started</h1>
  <p class="tagline">
    An overview of how to get started using Video.js, from basic CDN usage to Browserify, along with
    examples.
  </p>
</section>

<div class="row">
  <div class="col-md-2">
    <nav class="affixed-sidebar">
      <ul class="nav">
        <li role="presentation" class="active">
          <a href="#download">Download</a>
          <ul class="nav">
            <li><a href="#download-cdn">CDN</a></li>
            <li><a href="#download-npm">npm</a></li>
          </ul>
        </li>
        <li role="presentation">
          <a href="#included">What's in the box</a>
          <ul class="nav">
            <li><a href="#included-dist">Distribution</a></li>
            <li><a href="#included-source">Source code</a></li>
          </ul>
        </li>
        <li role="presentation">
          <a href="#build">Build</a>
        </li>
        <li role="presentation">
          <a href="#customize">Customize</a>
          <ul class="nav">
            <li><a href="#skinning">Skinning</a></li>
            <li><a href="#plugins">Plugins</a></li>
          </ul>
        </li>
      </ul>
    </nav>
  </div>
  <div class="col-md-10">
    <section class="download">
      <h2 id="download" class="page-header">Download</h2>

      <p class="lead">
        There are a few ways to get started using Video.js (currently v<span class="vjs-version">$LATEST_VERSION$</span>),
        and you should select the one that best fits your particular use case.
      </p>

      <h3 id="download-cdn">Video.js CDN</h3>
      <p>
        Our friends at <a href="http://fastly.com" target="_blank">Fastly</a> are nice enough to provide
        hosting for all the necessary files for Video.js on their content delivery network. Using these
        hosted files is probably the easiest way to get started using Video.js, you simply need to include
        the following links in your page.

      <pre><code class="html">&lt;head&gt;
  &lt;link href="http://vjs.zencdn.net/<span class="vjs-version">$LATEST_VERSION$</span>/video-js.css" rel="stylesheet"&gt;

  &lt;!-- If you'd like to support IE8 (for Video.js versions prior to v7) --&gt;
  &lt;script src="http://vjs.zencdn.net/ie8/<span class="ie8-version">ie8-version</span>/videojs-ie8.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
  &lt;video id="my-video" class="video-js" controls preload="auto" width="640" height="264"
  poster="MY_VIDEO_POSTER.jpg" data-setup="{}"&gt;
    &lt;source src="MY_VIDEO.mp4" type='video/mp4'&gt;
    &lt;source src="MY_VIDEO.webm" type='video/webm'&gt;
    &lt;p class="vjs-no-js">
      To view this video please enable JavaScript, and consider upgrading to a web browser that
      &lt;a href="http://videojs.com/html5-video-support/" target="_blank"&gt;supports HTML5 video&lt;/a&gt;
    &lt;/p&gt;
  &lt;/video&gt;

  &lt;script src="http://vjs.zencdn.net/<span class="vjs-version">$LATEST_VERSION$</span>/Video.js"&gt;&lt;/script&gt;
&lt;/body&gt;</code></pre>

<h3 id="download-npm">Install via npm</h3>
<p>For more advanced workflows, installing via <a href="http://npmjs.com">npm</a> is recommended</p>
<pre><code>$ npm install --save-dev Video.js</code></pre>

<h3>Internet Explorer Support</h3>

      <p>
        Beginning with v7, we will no longer support Microsoft Internet Explorer versions prior to IE 11, including IE 8, 9, and 10. 
        Microsoft dropped support for these versions over two years ago, they are widely considered out of compliance with modern security standards,
        and they comprise less than 0.1% of Video.js browser usage.
      </p>

      <p>
        For versions of Video.js prior to v7, there are a few common things you should keep in mind regardless of how you end up including
        Video.js in your project. The core codebase uses a few modern features of Javascript (ES5), so if you'd like
        to support IE8 you'll need to include an ES5 shim. To make things easier, we created a single file you
        can include for IE8 support. No matter where the core Video.js library is placed, this file needs to be located
        in the <code>&lt;head&gt;</code> of the document.
      </p>
      
<h3>Google Analytics</h3>

      <p>
        We include a stripped down Google Analytics pixel that tracks a random
        percentage (currently 1%) of players loaded from the CDN. This allows
        us to see (roughly) what browsers are in use in the wild, along with
        other useful metrics such as OS and device. If you'd like to disable
        analytics, you can simply include the following global before including
        Video.js via the free CDN:
      </p>
      <p> Note: v7 will not send any data, and v6.8 and up respect the browser's do not track flag. </p>

      <pre><code class="javascript">window.HELP_IMPROVE_VIDEOJS = false;</code></pre>
    </section>

    <section class="included">
      <h2 id="included" class="page-header">What's in the box?</h2>

      <p class="lead">
        If you've downloaded one of the <a href="https://github.com/videojs/Video.js/releases">releases</a> or installed via a package manager,
        you've probably noticed that the contents are slightly different from the source code available on Github. The former includes just the compiled
        files necessary to use Video.js, and the latter includes the source used to create those files.
      </p>

      <h3 id="included-dist">Distributions</h3>
      <p>A Video.js distribution is what you'll find if you've downloaded a release or installed via a package manager.</p>
      <pre><code>Video.js/
├── alt
│   ├── video.core.js
│   ├── video.core.min.js
│   ├── video.core.novtt.js
│   ├── video.core.novtt.min.js
│   ├── video.novtt.js
│   └── video.novtt.min.js
├── examples/
├── font
│   ├── VideoJS.svg
│   ├── VideoJS.ttf
│   └── VideoJS.woff
├── lang/
├── video-js-<span class="vjs-version">$LATEST_VERSION$</span>.zip
├── video-js.css
├── video-js.min.css
├── video.cjs.js
├── Video.es.js
├── Video.js
└── video.min.js</pre></code>

      <p>
        This package includes everything you'll need to use Video.js on a production site. By default, we bundle Video.js with Mozilla's excellent <a href="https://github.com/mozilla/vtt.js" target="_blank">VTT.js</a>.
        If you don't need VTT.js functionality for whatever reason, you can use one of the Video.js copies that don't include VTT.js. These have <code>novtt</code> in the name and can be found in the <code>alt/</code>
        directory. <code>font/</code> includes all the generated icon font files from the <a href="https://github.com/videojs/font" target="_blank">Videojs Font project</a>. <code>lang/</code> contains all the generated translation files.
      </p>

      <h3 id="included-source">Source Code</h3>
      <p>
        The source code is everything you'll find when checking out the Video.js git repository. This includes all the source files
        and any tooling necessary to build a production ready version of Video.js, as well as useful development tools such as sandboxed examples.
      </p>

      <p>
        A lot of the root source directory is JSON configs for various package managers because, Internet. Most likely the important things you're looking for will be in <code>src/</code> and <code>build/</code>.
        <code>src/</code> contains all of the source files for both the player JS and the base skin, while the <code>build/</code> directory contains various grunt tasks as well as the primary build file,
        <code>grunt.js</code>.
      </p>
    </section>

    <section class="build">
      <h2 id="build" class="page-header">Build Tools</h2>

      <p class="lead">
        Before getting started, you'll need <a href="https://nodejs.org/" target="_blank">Node.js</a> installed. 
        See <a href="https://github.com/videojs/video.js/blob/master/CONTRIBUTING.md#contributing-code" target="_blank">CONTRIBUTING.md</a> for more details.
      </p>


    </section>

    <section class="customize">
      <h2 id="customize">Customize</h2>

      <p>Using Video.js straight out of the box is fine, but we think it's better if you make it your own. Plugins and skins make it possible to completely customize your player.</p>

      <h3 id="skinning">Skinning</h3>

      <p>The player skin is completely built from HTML and CSS, including when Flash and other players like YouTube are used.</p>

      <p>Skin changes can be as simple as centering the play button (you can just add the 'vjs-big-play-centered' class to your video tag), or as complex as creating entirely new layouts. We've built a codepen project where you can explore different changes.</p>


      <p><a href="http://codepen.io/heff/pen/EarCt" target="_blank">Video.js Skin Designer</a></p>

      <p>And if you know CSS, you can always just open your Chrome dev tools and hack away!</p>

      <h3 id="plugins">Plugins</h3>

      <p>Video.js by itself is purposefully very simple. It supports the basic video and audio playback features and ensures they work the same across different playback technologies ("techs"). Any more advanced features are built as plugins, including playlists, analytics, advertising, and support for advanced formats like HLS and DASH. Check out the plugins page to see what's available.</p>

      <p><a href="/plugins/">Video.js Plugins</a></p>

    </section>
  </div>
</div>
